#include<stdio.h>
#include<iostream>
using namespace std;
typedef char Elemtype;//顺序栈实验任务
class stack
{
public:
	char date[100];
	int top;
	stack();
	bool empty();
	bool full();
	bool gettop(Elemtype &x);
	bool push(Elemtype x);
	bool pop();
};
stack::stack()
{
	top = -1;
}
bool stack::empty()
{
	if (top == -1)
		return 1;
	else
		return 0;
}
bool stack::full()
{
	if (top == 20 - 1)
		return 1;
	else
		return 0;
}
bool stack::gettop(Elemtype &x)
{
	if (empty())
		return 0;
	else
	{
		x = date[top];
		return 1;
	}
}
bool stack::push(Elemtype x)
{
	if (full())
		return 0;
	else
	{
		top++;
		date[top] = x;
		return 1;
	}
}
bool stack::pop()
{
	if (empty())
		return 0;
	else
	{
		top--;
		return 1;
	}
}
void change(int i)
{
	stack A;

	while (i)
	{
		   int a = i % 16;
			switch (a)
			{
			case 0:
				A.push('0');
				break;
			case 1:
				A.push('1');
				break;
			case 2:
				A.push('2');
				break;
			case 3:
				A.push('3');
				break;
			case 4:
				A.push('4');
				break;
			case 5:
				A.push('5');
				break;
			case 6:
				A.push('6');
				break;
			case 7:
				A.push('7');
				break;
			case 8:
				A.push('8');
				break;
			case 9:
				A.push('9');
				break;
			case 10:
				A.push('A');
				break;
			case 11:
				A.push('B');
				break;
			case 12:
				A.push('C');
				break;
			case 13:
				A.push('D');
				break;
			case 14:
				A.push('E');
				break;
			case 15:
				A.push('F');
				break;

			}
			i /= 16;
		
	}

	while (!A.empty())
	{
		cout << A.date[A.top];
		A.pop();
    }
}
	int main()
	{
		int n;
		cout << "请输入一个十进制数"<<endl;
		cin >> n;
		cout << "转化为16进制为:" << endl;
		change(n);

	}
